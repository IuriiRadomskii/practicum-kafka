version: "3.5"

x-kafka-common-env: &kafka-common-env
  KAFKA_ENABLE_KRAFT: yes
  ALLOW_PLAINTEXT_LISTENER: yes
  KAFKA_KRAFT_CLUSTER_ID: practicum
  KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
  KAFKA_CFG_PROCESS_ROLES: broker,controller
  KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
  KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
  KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true

services:

  ui:
    image: provectuslabs/kafka-ui:v0.7.0
    restart: always
    ports:
      - "127.0.0.1:8086:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka-0:9092
      KAFKA_CLUSTERS_0_NAME: kraft
    networks:
      - proxynet_sprint_5

  kafka-0:
    image: bitnami/kafka:3.7
    container_name: kafka-0
    restart: always
    ports:
      - "127.0.0.1:9094:9094"
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-0:9092,EXTERNAL://127.0.0.1:9094
    volumes:
      - kafka_0_sprint_5_data:/bitnami/kafka
    networks:
      - proxynet_sprint_5
  
  kafka-1:
    image: bitnami/kafka:3.7
    container_name: kafka-1
    restart: always
    ports:
      - "127.0.0.1:9095:9095"
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9095
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,EXTERNAL://127.0.0.1:9095
    volumes:
      - kafka_1_sprint_5_data:/bitnami/kafka
    networks:
      - proxynet_sprint_5
  
  kafka-2:
    image: bitnami/kafka:3.7
    container_name: kafka-2
    restart: always
    ports:
      - "127.0.0.1:9096:9096"
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9096
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,EXTERNAL://127.0.0.1:9096
    volumes:
      - kafka_2_sprint_5_data:/bitnami/kafka
    networks:
      - proxynet_sprint_5

  #kafka-3:
  #  image: bitnami/kafka:3.7
  #  container_name: kafka-3
  #  restart: always
  #  ports:
  #    - "127.0.0.1:9097:9097"
  #  environment:
  #    <<: *kafka-common-env
  #    KAFKA_CFG_NODE_ID: 3
  #    KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9097
  #    KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,EXTERNAL://127.0.0.1:9097
  #  volumes:
  #    - kafka_3_sprint_5_data:/bitnami/kafka
  #  networks:
  #    - proxynet_sprint_5
  
  grafana:
    image: "grafana/grafana:8.1.6"
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      GF_PATHS_DATA: /var/lib/grafana
      GF_SECURITY_ADMIN_PASSWORD: kafka
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    container_name: grafana
    depends_on:
      - prometheus
    networks:
      - proxynet_sprint_5


  prometheus:
    image: "prom/prometheus:v2.30.3"
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./etc/prometheus/alert.rules:/etc/prometheus/alert.rules
    command: "--config.file=/etc/prometheus/prometheus.yml"
    container_name: prometheus
    networks:
      - proxynet_sprint_5


  alertmanager:
    image: prom/alertmanager:v0.21.0
    restart: unless-stopped
    container_name: alertmanager
    volumes:
      - ./etc/alertmanager/config.yml:/etc/alertmanager/config.yml
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--log.level=debug'
    ports:
      - 9093:9093
    networks:
      - proxynet_sprint_5

  jmx-kafka101:
    image: "sscaling/jmx-prometheus-exporter"
    restart: unless-stopped
    ports:
      - "5556:5556"
    environment:
      CONFIG_YML: "/etc/jmx_exporter/config.yml"
      JVM_OPTS: ${PROMETHEUS_JMX_AGENT_JVM_OPTS}
    volumes:
      - ./etc/jmx_exporter/config_kafka101.yml:/etc/jmx_exporter/config.yml
    container_name: jmx-kafka101
    depends_on:
      - kafka-0
    networks:
      - proxynet_sprint_5



networks:
  proxynet_sprint_5:
    name: custom_network_sprint_5


volumes:
  kafka_0_sprint_5_data:
  kafka_1_sprint_5_data:
  kafka_2_sprint_5_data:
  kafka_3_sprint_5_data: